#standardSQL

#
# Return the distance between two lat/lon locations in meters
# if any of the parameters are null, returns null
# if the distance is less than .0001 degrees, returns 0
#
CREATE TEMP FUNCTION distance_m(lat1 FLOAT64, lon1 FLOAT64, lat2 FLOAT64, lon2 FLOAT64) AS (
    IF (
      (ABS(lat2 - lat1) < .0001 AND ABS(lon2- lon1) < .0001 ),
      0.0,
      ACOS( COS(0.01745329251 * (90 - lat1)) * COS(0.01745329251 * (90 - lat2)) + SIN(0.01745329251 * (90 - lat1)) * SIN(0.01745329251 * (90 - lat2)) * COS(0.01745329251 * (lon2 - lon1)) ) * 6371000
    ));

#
# Return the absolute value of the diff between the two timestamps in hours with microsecond precision
# If either parameter is null, return null
#
CREATE TEMP FUNCTION
  hours_diff_abs(timestamp1 TIMESTAMP,
    timestamp2 TIMESTAMP) AS ( ABS(TIMESTAMP_DIFF(timestamp1, timestamp2, microsecond) / 3600000000.0) );

WITH
  positions AS (
    SELECT
      ssvid,
      msgid,
      seg_id,
      lat,
      lon,
      speed,
      course,
      timestamp,
      LAG(timestamp, 1) OVER (PARTITION BY seg_id ORDER BY timestamp) prev_timestamp,
      LAG(lat, 1) OVER (PARTITION BY seg_id ORDER BY timestamp) prev_lat,
      LAG(lon, 1) OVER (PARTITION BY seg_id ORDER BY timestamp) prev_lon,
      nnet_score,
      distance_from_port_m,
      distance_from_shore_m,
      elevation_m,
      lower(source) as source
    FROM
      `{{ source }}`
    WHERE _table_suffix >= '{{ date_from }}' and _table_suffix < '{{ date_to }}'),
  pos_relative_prev_seg as (
    SELECT
      *,
      IFNULL (hours_diff_abs (timestamp, prev_timestamp), 0) hours,
      IFNULL (distance_m (prev_lat, prev_lon, lat, lon), 0) meters_to_prev,
    FROM
      positions),
  pos_fishing_hours AS (
    SELECT
      *,
      IF (nnet_score > 0.5, hours, 0) AS fishing_hours
    FROM pos_relative_prev_seg )

# Return
SELECT
  msgid,
  lat,
  lon,
  speed,
  course,
  timestamp,
  hours,
  nnet_score,
  seg_id,
  ssvid,
  distance_from_port_m,
  distance_from_shore_m,
  elevation_m,
  source,
  meters_to_prev
FROM
  pos_fishing_hours
